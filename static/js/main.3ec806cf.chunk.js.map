{"version":3,"sources":["component/main/Card.js","component/header/Select.js","component/header/Search.js","component/footer/Pagination.js","component/header/Tags-select.js","pages/App.js","reportWebVitals.js","index.js"],"names":["colorChip","grass","fairy","poison","fire","flying","water","bug","normal","electric","ground","fighting","psychic","rock","ghost","ice","steel","dragon","dark","useStyles","makeStyles","createStyles","root","width","height","textAlign","media","RecipeReviewCard","pokemon","classes","Grid","container","direction","justifyContent","alignItems","Card","className","CardMedia","image","sprites","front_default","CardContent","name","types","map","Stack","spacing","padding","Chip","chip","label","type","color","ControlledOpenSelect","count","setCount","React","open","setOpen","FormControl","fullWidth","InputLabel","id","Select","labelId","onClose","onOpen","value","onChange","event","target","MenuItem","FreeSolo","setPokemonName","TextField","InputProps","theme","pagination","display","marginLeft","marginRight","marginTop","PaginationOutlined","setCurrentPage","currentPage","countOfPage","Pagination","page","variant","MultipleSelectCheckmarks","pokemonTags","setPokemonTags","useState","tags","setTags","useEffect","fetch","then","response","json","data","allTags","results","item","multiple","split","input","OutlinedInput","renderValue","selected","join","tag","Checkbox","checked","indexOf","ListItemText","primary","maxWidth","footer","App","countPerPage","setCountPerPage","pokemons","setPokemons","pokemonName","setCountOfPage","allPokemons","setAllPokemons","pokemonInfo","setPokemonInfo","length","promises","Promise","all","arr","arr2","forEach","push","names","result","filter","element","includes","Math","round","end","start","slice","needSave","url","info","xs","sm","md","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3ec806cf.chunk.js","sourcesContent":["import React from \"react\";\nimport { makeStyles, createStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Chip from \"@mui/material/Chip\";\nimport Stack from \"@mui/material/Stack\";\nimport Grid from \"@material-ui/core/Grid\";\n\nconst colorChip = {\n  grass: \"success\",\n  fairy: \"secondary\",\n  poison: \"error\",\n  fire: \"warning\",\n  flying: \"info\",\n  water: \"primary\",\n  bug: \"warning\",\n  normal: \"default\",\n  electric: \"secondary\",\n  ground: \"warning\",\n  fighting: \"secondary\",\n  psychic: \"error\",\n  rock: \"error\",\n  ghost: \"default\",\n  ice: \"info\",\n  steel: \"default\",\n  dragon: \"error\",\n  dark: \"secondary\",\n};\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    root: {\n      width: 160,\n      height: 300,\n      textAlign: \"center\",\n    },\n    media: {\n      height: \"150px\",\n      width: \"150px\",\n    },\n  })\n);\n\nexport default function RecipeReviewCard({ pokemon }) {\n  const classes = useStyles();\n\n  return (\n    <Grid container direction=\"row\" justifyContent=\"center\" alignItems=\"center\">\n      <Card className={classes.root}>\n        <CardMedia\n          className={classes.media}\n          image={pokemon.sprites.front_default}\n        />\n        <CardContent>\n          <h3>{pokemon.name}</h3>\n          {pokemon.types.map((types) => {\n            return (\n              <Stack\n                spacing={1}\n                alignItems=\"center\"\n                padding=\"1px\"\n                key={types.type.name}\n              >\n                <Stack direction=\"row\" spacing={1}>\n                  <Chip\n                    className={classes.chip}\n                    label={types.type.name}\n                    color={colorChip[types.type.name] || \"success\"}\n                  />\n                </Stack>\n              </Stack>\n            );\n          })}\n        </CardContent>\n      </Card>\n    </Grid>\n  );\n}\n","import * as React from \"react\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Select from \"@mui/material/Select\";\n\nexport default function ControlledOpenSelect({ count, setCount }) {\n  const [open, setOpen] = React.useState(false);\n\n  const handleChange = (event) => {\n    setCount(event.target.value);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  return (\n    <FormControl fullWidth>\n      <InputLabel id=\"demo-controlled-open-select-label\">Pokemon</InputLabel>\n      <Select\n        labelId=\"demo-controlled-open-select-label\"\n        id=\"demo-controlled-open-select\"\n        open={open}\n        onClose={handleClose}\n        onOpen={handleOpen}\n        value={count}\n        label=\"Pokemon\"\n        onChange={handleChange}\n      >\n        <MenuItem value={20}>20</MenuItem>\n        <MenuItem value={50}>50</MenuItem>\n        <MenuItem value={100}>100</MenuItem>\n      </Select>\n    </FormControl>\n  );\n}\n","import * as React from \"react\";\nimport TextField from \"@mui/material/TextField\";\n\nexport default function FreeSolo({ setPokemonName }) {\n  const handleClick = (event) => {\n    setPokemonName(event.target.value);\n  };\n\n  return (\n    <TextField\n      fullWidth\n      label=\"Search input\"\n      InputProps={{\n        type: \"search\",\n      }}\n      onChange={handleClick}\n    />\n  );\n}\n","import * as React from 'react';\nimport Pagination from '@mui/material/Pagination';\nimport Stack from '@mui/material/Stack';\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n    pagination: {\n        display: \"block\",\n        marginLeft: \"auto\",\n        marginRight: \"auto\",\n        marginTop: \"30px\", \n    },\n}));\n\nexport default function PaginationOutlined({setCurrentPage, currentPage, countOfPage}) {\n  const classes = useStyles();\n\n  function handleClick(event, page) {\n    setCurrentPage(page);\n  }\n\n\n  return (\n    <Stack spacing={2} className={classes.pagination}>\n      <Pagination \n       page={currentPage}\n       count={countOfPage}\n       variant=\"outlined\" \n       color=\"primary\" \n       onChange={handleClick}\n      />\n    </Stack>\n  );\n}","import * as React from \"react\";\nimport OutlinedInput from \"@mui/material/OutlinedInput\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Select from \"@mui/material/Select\";\nimport { useState, useEffect } from \"react\";\nimport ListItemText from '@mui/material/ListItemText';\nimport Checkbox from '@mui/material/Checkbox';\n\nexport default function MultipleSelectCheckmarks({\n  pokemonTags,\n  setPokemonTags,\n}) {\n  const [tags, setTags] = useState([]);\n\n  useEffect(() => {\n    fetch(`https://pokeapi.co/api/v2/type/`)\n      .then((response) => response.json())\n      .then((data) => {\n        const allTags = data.results.map((item) => {\n          return item.name;\n        });\n        setTags(allTags);\n      });\n  }, [setTags]);\n\n  const handleChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setPokemonTags(typeof value === \"string\" ? value.split(\",\") : value);\n  };\n\n  return (\n    <div>\n      <FormControl fullWidth>\n        <InputLabel id=\"demo-controlled-open-select-label\">\n          Pokemon Tag\n        </InputLabel>\n        <Select\n          labelId=\"demo-multiple-checkbox-label\"\n          id=\"demo-multiple-checkbox\"\n          multiple\n          value={pokemonTags}\n          onChange={handleChange}\n          input={<OutlinedInput label=\" Pokemon Tag\" />}\n          renderValue={(selected) => selected.join(\", \")}\n        >\n          {tags.map((tag) => (\n            <MenuItem key={tag} value={tag}>\n              <Checkbox checked={pokemonTags.indexOf(tag) > -1} />\n              <ListItemText primary={tag} />\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n    </div>\n  );\n}\n","import Card from \"../component/main/Card\";\nimport { useState, useEffect } from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Select from \"../component/header/Select\";\nimport Search from \"../component/header/Search\";\nimport Pagination from \"../component/footer/Pagination\";\nimport TagsSelect from \"../component/header/Tags-select\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    maxWidth: 1000,\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    marginTop: \"30px\",\n  },\n  footer: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n}));\n\nfunction App() {\n  const classes = useStyles();\n  const [countPerPage, setCountPerPage] = useState(20);\n  const [pokemons, setPokemons] = useState([]);\n  const [pokemonName, setPokemonName] = useState(\"\");\n  const [currentPage, setCurrentPage] = useState(1);\n  const [countOfPage, setCountOfPage] = useState(1);\n  const [allPokemons, setAllPokemons] = useState([]);\n  const [pokemonInfo, setPokemonInfo] = useState({});\n  const [pokemonTags, setPokemonTags] = useState([]);\n\n  useEffect(() => {\n    if (pokemonTags.length === 0) {\n      fetch(`https://pokeapi.co/api/v2/pokemon/?limit=100000`)\n        .then((response) => response.json())\n        .then((data) => {\n          setAllPokemons(data.results);\n        });\n    } else {\n      const promises = pokemonTags.map((tag) => {\n        return fetch(`https://pokeapi.co/api/v2/type/${tag}`)\n          .then((response) => response.json())\n          .then((data) => {\n            const arr = data.pokemon.map((item) => {\n              return item.pokemon;\n            });\n            return arr;\n          });\n      });\n      Promise.all(promises).then((arr) => {\n        const arr2 = [];\n        arr.forEach((item) => {\n          arr2.push(...item);\n        });\n\n        const names = {};\n        const result = arr2.filter((element) => {\n          if (names[element.name]) {\n            return false;\n          }\n\n          names[element.name] = 1;\n          return true;\n        });\n        setAllPokemons(result);\n      });\n    }\n  }, [pokemonTags]);\n\n  useEffect(() => {\n    let result = allPokemons;\n    if (pokemonName !== \"\") {\n      result = result.filter((item) => item.name.includes(pokemonName));\n    }\n\n    setCountOfPage(Math.round(result.length / countPerPage));\n\n    const end = currentPage * countPerPage;\n    const start = end - countPerPage;\n    result = result.slice(start, end);\n\n    let needSave = false;\n    const promises = result.map((item) => {\n      if (pokemonInfo[item.name]) {\n        return pokemonInfo[item.name];\n      }\n\n      needSave = true;\n      return fetch(item.url).then((response) => response.json());\n    });\n    Promise.all(promises).then((data) => {\n      if (needSave) {\n        const info = {};\n        data.forEach((item) => {\n          info[item.name] = item;\n        });\n        setPokemonInfo({\n          ...pokemonInfo,\n          ...info,\n        });\n      }\n      setPokemons(data);\n    });\n  }, [\n    countPerPage,\n    pokemonName,\n    currentPage,\n    setCountOfPage,\n    allPokemons,\n    setPokemonInfo,\n    pokemonInfo,\n  ]);\n\n  useEffect(() => {\n    setCurrentPage(1);\n  }, [countPerPage, pokemonName, setCurrentPage]);\n\n  return (\n    <div className={classes.root}>\n      <header>\n        <Grid\n          container\n          alignItems=\"center\"\n          spacing={2}\n          justifyContent=\"space-around\"\n        >\n          <Grid item xs={12} sm={6}>\n            <Search setPokemonName={setPokemonName}></Search>\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <Grid container spacing={2} justifyContent=\"flex-end\">\n              <Grid item xs={6}>\n                <Select\n                  count={countPerPage}\n                  setCount={setCountPerPage}\n                ></Select>\n              </Grid>\n              <Grid item xs={6}>\n                <TagsSelect\n                  pokemonTags={pokemonTags}\n                  setPokemonTags={setPokemonTags}\n                ></TagsSelect>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n      </header>\n      <main>\n        <Grid container spacing={2}>\n          {pokemons.map((pokemon) => (\n            <Grid item xs={6} sm={4} md={2} key={pokemon.id}>\n              <Card pokemon={pokemon}></Card>\n            </Grid>\n          ))}\n        </Grid>\n      </main>\n      <footer className={classes.footer}>\n        <Pagination\n          currentPage={currentPage}\n          setCurrentPage={setCurrentPage}\n          countOfPage={countOfPage}\n        ></Pagination>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './pages/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}